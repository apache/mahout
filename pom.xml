<?xml version="1.0" encoding="UTF-8"?>
<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.apache</groupId>
    <artifactId>apache</artifactId>
    <version>23</version>
  </parent>

  <groupId>org.apache.mahout</groupId>
  <artifactId>mahout</artifactId>
  <version>14.1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Apache Mahout</name>
  <url>http://mahout.apache.org</url>
  <inceptionYear>2008</inceptionYear>
  <description>Mahout's goal is to build scalable machine learning libraries. With scalable we mean: Scalable to
    reasonably large data sets. Our core algorithms for clustering, classification and batch based collaborative
    filtering are implemented on top of Apache Hadoop using the map/reduce paradigm. However we do not restrict
    contributions to Hadoop based implementations: Contributions that run on a single node or on a non-Hadoop
    cluster are welcome as well. The core libraries are highly optimized to allow for good performance also for
    non-distributed algorithms. Scalable to support your business case. Mahout is distributed under a commercially
    friendly Apache Software license. Scalable community. The goal of Mahout is to build a vibrant, responsive,
    diverse community to facilitate discussions not only on the project itself but also on potential use cases. Come
    to the mailing lists to find out more. Currently Mahout supports mainly four use cases: Recommendation mining
    takes users' behavior and from that tries to find items users might like. Clustering takes e.g. text documents
    and groups them into groups of topically related documents. Classification learns from existing categorized
    documents what documents of a specific category look like and is able to assign unlabelled documents to the
    (hopefully) correct category. Frequent itemset mining takes a set of item groups (terms in a query session,
    shopping cart content) and identifies, which individual items usually appear together.
  </description>

  <organization>
    <name>The Apache Software Foundation</name>
    <url>http://www.apache.org/</url>
  </organization>

  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <mailingLists>
    <mailingList>
      <name>User list</name>
      <subscribe>user-subscribe@mahout.apache.org</subscribe>
      <unsubscribe>user-unsubscribe@mahout.apache.org</unsubscribe>
      <post>user@mahout.apache.org</post>
      <archive>http://mail-archives.apache.org/mod_mbox/mahout-user/</archive>
      <otherArchives>
        <otherArchive>http://mahout.apache.org/mail/user/</otherArchive>
        <otherArchive>http://mahout.markmail.org/</otherArchive>
        <otherArchive>http://www.nabble.com/Mahout-User-List-f32042.html</otherArchive>
      </otherArchives>
    </mailingList>
    <mailingList>
      <name>Developers List</name>
      <subscribe>dev-subscribe@mahout.apache.org</subscribe>
      <unsubscribe>dev-unsubscribe@mahout.apache.org</unsubscribe>
      <post>mahout-dev@mahout.apache.org</post>
      <archive>http://mail-archives.apache.org/mod_mbox/mahout-dev/</archive>
      <otherArchives>
        <otherArchive>http://mahout.apache.org/mail/dev/</otherArchive>
        <otherArchive>http://mahout.markmail.org/</otherArchive>
        <otherArchive>http://www.nabble.com/Mahout-Developer-List-f32041.html</otherArchive>
      </otherArchives>
    </mailingList>
    <mailingList>
      <name>Commit notifications</name>
      <subscribe>commits-subscribe@mahout.apache.org</subscribe>
      <unsubscribe>commits-unsubscribe@mahout.apache.org</unsubscribe>
      <archive>http://mail-archives.apache.org/mod_mbox/mahout-commits/</archive>
      <otherArchives>
        <otherArchive>http://mahout.apache.org/mail/commits/</otherArchive>
      </otherArchives>
    </mailingList>
  </mailingLists>

  <!-- Required for Release Plugin -->
  <scm>
    <connection>scm:git:git@github.com:apache/mahout.git</connection>
    <developerConnection>scm:git:https://gitbox.apache.org/repos/asf/mahout.git</developerConnection>
    <url>https://gitbox.apache.org/repos/asf?p=mahout.git;a=tree;h=refs/heads/${project.scm.tag};hb=${project.scm.tag}</url>
  </scm>

  <issueManagement>
    <system>Jira</system>
    <url>https://issues.apache.org/jira/browse/MAHOUT</url>
  </issueManagement>

  <repositories>
    <repository>
      <id>apache.snapshots</id>
      <name>Apache Snapshot Repository</name>
      <url>https://repository.apache.org/snapshots</url>
      <releases>
        <enabled>false</enabled>
      </releases>
    </repository>
  </repositories>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>

    <scala.version>2.11.12</scala.version>
    <scala.compat.version>2.11</scala.compat.version>

    <compile.flags/>

    <!--test-security-policy.path>${project.build.directory}/buildtools/src/test/resources/java.policy</test-security-policy.path-->

    <!-- Direct dependency versions -->
    <commons-cli.version>1.4</commons-cli.version>
    <commons-cli.mahout.version>2.0-mahout</commons-cli.mahout.version>
    <commons-dbcp.version>1.4</commons-dbcp.version>
    <commons-httpclient.version>3.1</commons-httpclient.version>
    <commons-lang3.version>3.10</commons-lang3.version>
    <commons-math3.version>3.6.1</commons-math3.version>
    <commons-pool.version>1.6</commons-pool.version>
    <commons-io.version>2.6</commons-io.version>
    <commons-logging.version>1.2</commons-logging.version>
    <!-- TODO: 4.2 is the latest version, however there were some errors in the tests, when updating to that -->
    <easymock.version>3.6</easymock.version>
    <fastutil.version>8.3.1</fastutil.version>
    <flink.version>1.10.0</flink.version>
    <flink-tests.version>1.8.3</flink-tests.version>
    <guava.version>27.0-jre</guava.version>
    <javacpp.version>1.5.3</javacpp.version>
    <kryo.version>4.0.2</kryo.version>
    <mongodb.version>3.12.3</mongodb.version>
    <mrunit.version>1.1.0</mrunit.version>
    <hadoop.version>3.2.1</hadoop.version>
    <hamcrest.version>2.2</hamcrest.version>
    <hector.version>2.0-0</hector.version>
    <hbase.version>2.2.4</hbase.version>
    <jackson.version>2.10.3</jackson.version>
    <lucene.version>8.5.1</lucene.version>
    <randomizedtesting.version>2.7.7</randomizedtesting.version>
    <scalatest.version>3.1.1</scalatest.version>
    <scopt.version>3.7.1</scopt.version>
    <slf4j.version>1.7.30</slf4j.version>
    <solr.version>3.5.0</solr.version>
    <spark.version>2.4.5</spark.version>
    <spark.compat.version>2.4</spark.compat.version>
    <t-digest.version>3.2</t-digest.version>
    <xml-apis.version>1.4.01</xml-apis.version>
    <xstream.version>1.4.12</xstream.version>

    <!-- Transitive dependency versions -->
  </properties>

  <modules>
    <module>core</module>
    <module>engine</module>
    <module>community</module>
    <module>distribution</module>
    <module>examples</module>
    <!-- The javacpp stuff doesn't seem to work correctly on Macs -->
    <!--module>experimental</module-->
  </modules>

  <dependencyManagement>
    <dependencies>
      <!--
        Direct dependencies
      -->
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-math3</artifactId>
        <version>${commons-math3.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-annotations</artifactId>
        <version>${hadoop.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-auth</artifactId>
        <version>${hadoop.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-client</artifactId>
        <version>${hadoop.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-common</artifactId>
        <version>${hadoop.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-hdfs</artifactId>
        <version>${hadoop.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-mapreduce-client-app</artifactId>
        <version>${hadoop.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-mapreduce-client-common</artifactId>
        <version>${hadoop.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-mapreduce-client-core</artifactId>
        <version>${hadoop.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-mapreduce-client-jobclient</artifactId>
        <version>${hadoop.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-mapreduce-client-shuffle</artifactId>
        <version>${hadoop.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-yarn-api</artifactId>
        <version>${hadoop.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-yarn-client</artifactId>
        <version>${hadoop.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-yarn-common</artifactId>
        <version>${hadoop.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-yarn-server-common</artifactId>
        <version>${hadoop.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.lucene</groupId>
        <artifactId>lucene-analyzers-common</artifactId>
        <version>${lucene.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.lucene</groupId>
        <artifactId>lucene-benchmark</artifactId>
        <version>${lucene.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.lucene</groupId>
        <artifactId>lucene-codecs</artifactId>
        <version>${lucene.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.lucene</groupId>
        <artifactId>lucene-core</artifactId>
        <version>${lucene.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.lucene</groupId>
        <artifactId>lucene-facet</artifactId>
        <version>${lucene.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.lucene</groupId>
        <artifactId>lucene-highlighter</artifactId>
        <version>${lucene.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.lucene</groupId>
        <artifactId>lucene-join</artifactId>
        <version>${lucene.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.lucene</groupId>
        <artifactId>lucene-memory</artifactId>
        <version>${lucene.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.lucene</groupId>
        <artifactId>lucene-queries</artifactId>
        <version>${lucene.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.lucene</groupId>
        <artifactId>lucene-queryparser</artifactId>
        <version>${lucene.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.lucene</groupId>
        <artifactId>lucene-spatial</artifactId>
        <version>${lucene.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.lucene</groupId>
        <artifactId>lucene-spatial-extras</artifactId>
        <version>${lucene.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.lucene</groupId>
        <artifactId>lucene-test-framework</artifactId>
        <version>${lucene.version}</version>
      </dependency>

      <dependency>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest_${scala.compat.version}</artifactId>
        <version>${scalatest.version}</version>
      </dependency>

      <dependency>
        <groupId>org.scala-lang</groupId>
        <artifactId>scala-reflect</artifactId>
        <version>${scala.version}</version>
      </dependency>

      <dependency>
        <groupId>org.scala-lang</groupId>
        <artifactId>scala-library</artifactId>
        <version>${scala.version}</version>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-log4j12</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>jcl-over-slf4j</artifactId>
        <version>${slf4j.version}</version>
      </dependency>

      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.13</version>
      </dependency>

      <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>1.2.17</version>
      </dependency>
      <dependency>
        <groupId>org.apache.flink</groupId>
        <artifactId>flink-runtime_${scala.compat.version}</artifactId>
        <version>${flink.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.flink</groupId>
        <artifactId>flink-java</artifactId>
        <version>${flink.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.flink</groupId>
        <artifactId>flink-core</artifactId>
        <version>${flink.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.flink</groupId>
        <artifactId>flink-clients_${scala.compat.version}</artifactId>
        <version>${flink.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.flink</groupId>
        <artifactId>flink-hadoop-compatibility_${scala.compat.version}</artifactId>
        <version>${flink.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.flink</groupId>
        <artifactId>flink-scala_${scala.compat.version}</artifactId>
        <version>${flink.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.flink</groupId>
        <artifactId>flink-test-utils_${scala.compat.version}</artifactId>
        <version>${flink.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.flink</groupId>
        <artifactId>flink-tests_${scala.compat.version}</artifactId>
        <version>${flink-tests.version}</version>
      </dependency>
      <dependency>
        <groupId>ai.h2o</groupId>
        <artifactId>h2o-core</artifactId>
        <version>0.1.25</version>
      </dependency>
      <dependency>
        <groupId>commons-dbcp</groupId>
        <artifactId>commons-dbcp</artifactId>
        <version>${commons-dbcp.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-pool</groupId>
        <artifactId>commons-pool</artifactId>
        <version>${commons-pool.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>${commons-io.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mongodb</groupId>
        <artifactId>mongo-java-driver</artifactId>
        <version>${mongodb.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mongodb</groupId>
        <artifactId>bson</artifactId>
        <version>${mongodb.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.hbase</groupId>
        <artifactId>hbase-client</artifactId>
        <version>${hbase.version}</version>
      </dependency>
      <dependency>
        <groupId>org.hectorclient</groupId>
        <artifactId>hector-core</artifactId>
        <version>${hector.version}</version>
      </dependency>
      <dependency>
        <groupId>xml-apis</groupId>
        <artifactId>xml-apis</artifactId>
        <version>${xml-apis.version}</version>
      </dependency>
      <dependency>
        <groupId>com.tdunning</groupId>
        <artifactId>t-digest</artifactId>
        <version>${t-digest.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${commons-lang3.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-cli</groupId>
        <artifactId>commons-cli</artifactId>
        <version>${commons-cli.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-logging</groupId>
        <artifactId>commons-logging</artifactId>
        <version>${commons-logging.version}</version>
      </dependency>
      <dependency>
        <groupId>com.thoughtworks.xstream</groupId>
        <artifactId>xstream</artifactId>
        <version>${xstream.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.solr</groupId>
        <artifactId>solr-commons-csv</artifactId>
        <version>${solr.version}</version>
      </dependency>
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest</artifactId>
        <version>${hamcrest.version}</version>
      </dependency>
      <dependency>
        <groupId>com.carrotsearch.randomizedtesting</groupId>
        <artifactId>randomizedtesting-runner</artifactId>
        <version>${randomizedtesting.version}</version>
      </dependency>
      <dependency>
        <groupId>org.easymock</groupId>
        <artifactId>easymock</artifactId>
        <version>${easymock.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.mrunit</groupId>
        <artifactId>mrunit</artifactId>
        <version>${mrunit.version}</version>
        <classifier>hadoop2</classifier>
      </dependency>
      <dependency>
        <groupId>commons-httpclient</groupId>
        <artifactId>commons-httpclient</artifactId>
        <version>${commons-httpclient.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.scopt</groupId>
        <artifactId>scopt_${scala.compat.version}</artifactId>
        <version>${scopt.version}</version>
      </dependency>
      <dependency>
        <groupId>com.esotericsoftware</groupId>
        <artifactId>kryo</artifactId>
        <version>${kryo.version}</version>
      </dependency>
      <dependency>
        <groupId>it.unimi.dsi</groupId>
        <artifactId>fastutil</artifactId>
        <version>${fastutil.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-core_${scala.compat.version}</artifactId>
        <version>${spark.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-mllib_${scala.compat.version}</artifactId>
        <version>${spark.version}</version>
      </dependency>
      <dependency>
        <groupId>org.bytedeco</groupId>
        <artifactId>javacpp</artifactId>
        <version>${javacpp.version}</version>
      </dependency>
      <!--
        This seems to be a release of the 2.0 branch of the commons-cli module.
        Unfortunately it hasn't been released yet.
      -->
      <dependency>
        <groupId>org.apache.mahout.commons</groupId>
        <artifactId>commons-cli</artifactId>
        <version>${commons-cli.mahout.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.flink</groupId>
        <artifactId>flink-hcatalog_2.11</artifactId>
        <version>1.10.0</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.rat</groupId>
        <artifactId>apache-rat-plugin</artifactId>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <!-- Output the problematic files to the console -->
              <consoleOutput>true</consoleOutput>
              <licenses>
                <license implementation="org.apache.rat.analysis.license.SimplePatternBasedLicense">
                  <patterns>
                    <note>CERN license for Colt -- basically only requires attribution</note>
                    <pattern>1999 CERN - European Organization for Nuclear Research</pattern>
                  </patterns>
                </license>
                <license implementation="org.apache.rat.analysis.license.SimplePatternBasedLicense">
                  <patterns>
                    <pattern>public domain</pattern>
                  </patterns>
                </license>
              </licenses>
              <excludes>
                <exclude>**/*.conf</exclude>
                <exclude>**/*.iml</exclude>
                <exclude>**/*.md</exclude>
                <exclude>**/*.props</exclude>
                <exclude>**/gen/**</exclude>
                <exclude>**/resources/**</exclude>
                <exclude>**/images/**</exclude>
                <exclude>**/target/**</exclude>
                <exclude>**/testdata/**</exclude>
                <exclude>**/.idea/**</exclude>
                <exclude>**/package-info.java</exclude>
                <exclude>**/.git/**</exclude>
                <exclude>**/.classpath</exclude>
                <exclude>**/.project</exclude>
                <exclude>**/.settings/**</exclude>
                <exclude>**/*.patch</exclude>
                <exclude>website/**</exclude>
                <exclude>.github/*</exclude>
                <exclude>**/*.properties</exclude>
                <!-- This directory onyl exists on travis -->
                <exclude>viennacl-dev-release-1.7.1/**</exclude>
              </excludes>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-versions</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireJavaVersion>
                  <version>[1.8,)</version>
                </requireJavaVersion>
                <requireMavenVersion>
                  <version>[3.3.9,)</version>
                </requireMavenVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <!-- encoding, source and target are explicitly defined until MNGECLIPSE-966 is fixed -->
          <encoding>${project.build.sourceEncoding}</encoding>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
          <optimize>true</optimize>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <forkCount>2</forkCount>
          <reuseForks>false</reuseForks>
          <!--argLine>-Xmx768m -Djava.security.manager -Djava.security.policy=${test-security-policy.path}</argLine-->
          <argLine>-Xmx768m</argLine>
          <testFailureIgnore>false</testFailureIgnore>
          <redirectTestOutputToFile>true</redirectTestOutputToFile>
          <systemPropertyVariables>
            <mahout.test.directory>${project.build.directory}</mahout.test.directory>
          </systemPropertyVariables>
        </configuration>
      </plugin>

      <!-- Create JavaDocs -->
      <!--plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <phase>package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin-->

      <!-- Create ScalaDocs -->
    <!--plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-scaladocs</id>
            <phase>package</phase>
            <goals>
              <goal>doc-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin-->
    </plugins>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>3.0.0-M3</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>3.1.1</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-pmd-plugin</artifactId>
          <version>3.13.0</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>findbugs-maven-plugin</artifactId>
          <version>3.0.5</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.1</version>
        </plugin>

        <plugin>
          <groupId>net.alchim31.maven</groupId>
          <artifactId>scala-maven-plugin</artifactId>
          <version>4.3.1</version>
          <configuration>
            <displayCmd>true</displayCmd>
            <checkMultipleScalaVersions>true</checkMultipleScalaVersions>
            <failOnMultipleScalaVersions>true</failOnMultipleScalaVersions>
            <scalaCompatVersion>${scala.compat.version}</scalaCompatVersion>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.0.0-M4</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-report-plugin</artifactId>
          <version>3.0.0-M4</version>
        </plugin>

        <plugin>
          <groupId>org.scalatest</groupId>
          <artifactId>scalatest-maven-plugin</artifactId>
          <version>2.0.0</version>
          <configuration>
            <systemProperties>
              <!--
                Make scalatest use the same java version as Maven is using
                (Without it would use the java version in the users Path)
              -->
              <java.home>${java.home}</java.home>
              <jdk.lang.Process.launchMechanism>FORK</jdk.lang.Process.launchMechanism>
            </systemProperties>
            <logForkedProcessCommand>true</logForkedProcessCommand>
            <!-- Make scalatest output to the usual surefire directory -->
            <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
            <junitxml>.</junitxml>
            <filereports>WDF TestSuite.txt</filereports>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.2.1</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>3.2.0</version>
          <configuration>
            <!--
              TODO: The JavaDoc comments quite commonly have invalid content throughout the
              project. The best solution would be to enable the fail-on settings and to fix
              them, but I've disabled them for now.
            -->
            <failOnWarnings>false</failOnWarnings>
            <failOnError>false</failOnError>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>3.1.2</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>1.6.0</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>taglist-maven-plugin</artifactId>
          <version>2.4</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-changes-plugin</artifactId>
          <version>2.12.1</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>3.2.0</version>
          <configuration>
            <finalName>apache-mahout-${project.version}</finalName>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>3.0.0-M1</version>
          <configuration>
            <!--
              Make the release plugin release all modules in the reactor with the same version.
              Without this, a release- and development version would have to be provided for
              every single module.
            -->
            <autoVersionSubmodules>true</autoVersionSubmodules>
          </configuration>
        </plugin>

        <plugin>
          <groupId>net.nicoulaj.maven.plugins</groupId>
          <artifactId>checksum-maven-plugin</artifactId>
          <version>1.8</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <!-- Development profile taking care of the cleaning and copying of jars to the lib directory -->
    <profile>
      <id>development</id>
      <build>
        <plugins>
          <!-- delete jars on clean in top directory, which is lib/ -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-clean-plugin</artifactId>
            <!-- Just execute this in the root and don't inherit the execution to child-modules -->
            <inherited>false</inherited>
            <configuration>
              <filesets>
                <fileset>
                  <directory>lib/</directory>
                  <includes>
                    <include>*.jar</include>
                  </includes>
                  <followSymlinks>false</followSymlinks>
                </fileset>
                <fileset>
                  <directory>doc/</directory>
                  <includes>
                    <include>*.jar</include>
                  </includes>
                  <followSymlinks>false</followSymlinks>
                </fileset>
              </filesets>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- Profile for some detailed source checks -->
    <profile>
      <id>sourcecheck</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
              <showDeprecation>true</showDeprecation>
              <showWarnings>true</showWarnings>
              <compilerArgument>${compile.flags}</compilerArgument>
            </configuration>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
            <executions>
              <execution>
                <id>sourcecheck</id>
                <phase>verify</phase>
                <goals>
                  <goal>checkstyle</goal>
                </goals>
                <configuration>
                  <failsOnError>false</failsOnError>
                  <!-- classpath -->
                  <configLocation>mahout-checkstyle.xml</configLocation>
                  <consoleOutput>true</consoleOutput>
                  <linkXRef>false</linkXRef>
                  <sourceDirectory>distribution/src</sourceDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-pmd-plugin</artifactId>
            <executions>
              <execution>
                <id>sourcecheck</id>
                <phase>verify</phase>
                <goals>
                  <goal>check</goal>
                  <goal>cpd-check</goal>
                </goals>
                <configuration>
                  <failOnViolation>false</failOnViolation>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>findbugs-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>sourcecheck</id>
                <phase>verify</phase>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!--
      rofile that ensures that when building on the CI server also the source
      and javadoc jars are being built and attached so they are available as
      SNAPSHOT versions
    -->
    <profile>
      <id>ci</id>
      <activation>
        <property>
          <name>env.JENKINS_URL</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!--
      Finetuning of the default apache-release profile.
      In general we only have it additionally create the SHA512 checksum which is needed
      to stage a release candidate.
    -->
    <profile>
      <id>apache-release</id>
      <build>
        <plugins>
          <!--
            Create MD5 and SHA512 checksum files for the release artifacts.
          -->
          <plugin>
            <groupId>net.nicoulaj.maven.plugins</groupId>
            <artifactId>checksum-maven-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>files</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <algorithms>
                <algorithm>SHA-512</algorithm>
              </algorithms>
              <fileSets>
                <fileSet>
                  <directory>${project.build.directory}</directory>
                  <includes>
                    <include>apache-mahout-${project.version}-source-release.zip</include>
                  </includes>
                </fileSet>
              </fileSets>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <reporting>
    <plugins>
      <!-- Create a report about the surefire test results -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
      </plugin>

      <!-- checkstyle -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <configuration>
          <!-- classpath -->
          <configLocation>mahout-checkstyle.xml</configLocation>
          <consoleOutput>true</consoleOutput>
        </configuration>
      </plugin>

      <!-- test coverage plugin -->
      <!-- TODO: Use jacoco instead -->
      <!--plugin>
        <groupId>com.atlassian.maven.plugins</groupId>
        <artifactId>maven-clover2-plugin</artifactId>
        <version>4.0.6</version>
        <configuration>
          <generateHistorical>true</generateHistorical>
          <licenseLocation>buildtools/clover.license</licenseLocation>
          <generatePdf>false</generatePdf>
          <generateXml>true</generateXml>
          <generateHtml>true</generateHtml>
        </configuration>
      </plugin-->

      <!-- generate java doc -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
      </plugin>

      <!-- code duplication - copy and paste detection -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <configuration>
          <rulesets>
            <!-- classpath -->
            <ruleset>mahout-pmd-ruleset.xml</ruleset>
          </rulesets>
          <targetJdk>${maven.compiler.target}</targetJdk>
          <linkXRef>false</linkXRef>
          <includeTests>true</includeTests>
          <verbose>true</verbose>
        </configuration>
      </plugin>

      <!-- catch code tags -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>taglist-maven-plugin</artifactId>
        <configuration>
          <tags>
            <tag>TODO</tag>
            <tag>todo</tag>
          </tags>
        </configuration>
      </plugin>

      <!-- findbugs -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <configuration>
          <xmlOutput>true</xmlOutput>
          <threshold>Low</threshold>
          <effort>Default</effort>
          <!--visitors>FindDeadLocalStores,UnreadFields</visitors-->
          <!--omitVisitors>FindDeadLocalStores,UnreadFields</omitVisitors-->
          <debug>true</debug>
          <relaxed>true</relaxed>
          <!-- classpath -->
          <excludeFilterFile>findbugs-exclude.xml</excludeFilterFile>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-changes-plugin</artifactId>
        <configuration>
          <onlyCurrentVersion>true</onlyCurrentVersion>
          <columnNames>Type,Key,Summary,Status,Resolution,Assignee</columnNames>
          <sortColumnNames>Type,Key</sortColumnNames>
        </configuration>
        <reportSets>
          <reportSet>
            <reports>
              <report>jira-report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <reportSets>
          <reportSet>
            <reports>
              <report>index</report>
              <report>dependencies</report>
              <report>dependency-convergence</report>
              <report>dependency-management</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>taglist-maven-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <!-- below was not parsing -->
        <!--<configuration>
          <reportPlugins>
            <plugin>
              <artifactId>maven-project-info-reports-plugin</artifactId>
              &lt;!&ndash;<version>2.2</version>&ndash;&gt;
            </plugin>
             <plugin>
              <groupId>net.alchim31.maven</groupId>
              <artifactId>scala-maven-plugin</artifactId>
              <version>4.0.2</version>
                  <configuration>
                   <jvmArgs>
                      <jvmArg>-Xms64m</jvmArg>
                      <jvmArg>-Xmx1024m</jvmArg>
                    </jvmArgs>
                  </configuration>
             </plugin>
           </reportPlugins>
         </configuration>-->
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <configuration>
          <configLocation>buildtools/src/main/resources/mahout-checkstyle.xml</configLocation>
        </configuration>
      </plugin>
    </plugins>
  </reporting>

</project>

